{
  "hash": "dfcc5ab3c23c1f8062f8b839570b6225",
  "result": {
    "markdown": "---\ntitle: \"Continuous Predictive Distribution\"\nsubtitle: \"Should I use a KDE?\"\nauthor: \"Teemu SÃ¤ilynoja\"\ndate: \"2023-02-13\"\ndate-modified: \"2023-02-14\"\n# image: \"../../docs/case_studies/\"\nformat:\n  html:\n    page-layout: full\n    toc: true\n    code-fold: true\n    code-tools: true\n    code-line-numbers: true\n    default-image-extension: svg\n    fig-format: svg\n---\n\n\n<!-- ```{r} -->\n<!-- #| label: options -->\n<!-- #| code-summary: \"Imports & options\" -->\n<!-- #| output: false -->\n<!-- #| message: false -->\n\n<!-- library(\"bayesplot\") -->\n<!-- library(\"cmdstanr\") -->\n<!-- library(\"ggplot2\") -->\n<!-- library(\"ggtrace\") -->\n<!-- library(\"khroma\") -->\n\n\n<!-- # Source for the modified reliability plot -->\n<!-- source(\"../../code/helpers.R\") -->\n\n<!-- good_theme <- bayesplot::theme_default(base_family = \"Sans\") + theme( -->\n<!--   axis.text = element_text(colour = \"#666666\", size = 12), -->\n<!--   axis.ticks = element_line(colour = \"#666666\"), -->\n<!--   title = element_text(colour = \"#666666\", size = 16), -->\n<!--   plot.subtitle = element_text(colour = \"#666666\", size = 14), -->\n<!--   legend.text = element_text(colour = \"#666666\", size = 12), -->\n<!--   legend.title = element_text(colour = \"#666666\", size = 14), -->\n<!--   axis.line = element_line(colour = \"#666666\")) -->\n\n<!-- theme_set(good_theme) -->\n<!-- bayesplot_theme_set(good_theme) -->\n<!-- color_scheme_set(scheme = c(unname(colour(\"vibrant\")(7)[c(3,2,5,4,6,1)]))) -->\n\n<!-- scale_colour_discrete = scale_colour_vibrant -->\n<!-- scale_fill_discrete = scale_fill_vibrant -->\n\n<!-- SEED <- 236543 -->\n<!-- set.seed(SEED) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- #| code-summary: \"Data generation\" -->\n<!-- n_rep <- 10 -->\n<!-- N <- 250 -->\n<!-- freq_na <- 0.1 -->\n<!-- x <- rnorm(N, 1, .5) -->\n<!-- x[rbinom(N, 1, freq_na) == 1] <- 0 -->\n<!-- mu_0 <- 0 -->\n<!-- nu <- 1 -->\n<!-- alpha <- 1 -->\n<!-- beta <- 1 -->\n\n<!-- alpha_post <- alpha + N / 2 -->\n<!-- beta_post <- beta + 0.5 * (N - 1) * var(x) + -->\n<!--   (N * nu * (mean(x) - mu_0) ** 2) / (2 * (nu + N)) -->\n\n<!-- sd_post <- sqrt(1 / rgamma(n_rep, alpha_post, beta_post)) -->\n<!-- nu_post <- nu + N -->\n<!-- mu_post <- rnorm(n_rep, nu * mu_0 + sum(x) / (nu * N), sd = sd_post / sqrt(nu_post) ) -->\n\n<!-- x_post <- c(replicate(N, rnorm(n_rep, mu_post, sd_post))) -->\n<!-- rep_id <- rep(c(1:n_rep), each = N) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- #| label: plots -->\n<!-- p_dens <- ppc_dens_overlay(x, matrix(x_post, nrow = n_rep)) -->\n<!-- p_dots <- ggplot() + -->\n<!--   stat_dots(aes(x = x), -->\n<!--             quantiles = 100, -->\n<!--             fill = \"transparent\", -->\n<!--             colour = layer_data(p_dens, 2L)$colour[1]) + -->\n<!--   stat_density(aes(x = x), -->\n<!--                geom = \"line\", -->\n<!--                colour = layer_data(p_dens, 2L)$colour[1]) + -->\n<!--   xlab(\"\") -->\n<!-- p_hist <- ggplot() + -->\n<!--   geom_histogram(aes(x = x), -->\n<!--                  colour = layer_data(p_dens, 2L)$colour[1], -->\n<!--                  fill = layer_data(p_dens, 2L)$colour[1], -->\n<!--                  alpha = .2) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- pit <- function(x, fig_data, idx) { -->\n<!--   kde <- fig_data[fig_data$group == idx, c(\"x\",\"y\")] -->\n<!--   Kde <- list(x = kde$x, y = (kde$x[2] - kde$x[1]) * cumsum(kde$y)) -->\n<!--   sapply(x, function(x_i) Kde$y[which.max(Kde$x >= x_i)]) -->\n<!-- } -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- #| label: ecdf -->\n<!-- #| message: false -->\n<!-- p_ecdf <- ppc_pit_ecdf(pit = pit(x, layer_data(p_dens, 2L), 1), interpolate_adj = T) -->\n<!-- for (idx in 1:n_rep) { -->\n<!--   gg_data = data.frame( -->\n<!--     PIT = seq(0,1,length.out = N), -->\n<!--     ECDF = ecdf(pit(x_post[rep_id == idx], layer_data(p_dens), idx))(seq(0,1,length.out = N)) -->\n<!--     ) -->\n<!--   p_ecdf <- p_ecdf + geom_step(data = gg_data, aes(x = PIT, y = ECDF), colour = layer_data(p_dens)$colour[1], alpha = .7, linewidth = layer_data(p_dens)$linewidth[1]) -->\n<!-- } -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- #| label: ecdf_diff -->\n<!-- #| message: false -->\n<!-- p_ecdfd <- ppc_pit_ecdf(pit = pit(x, layer_data(p_dens, 2L), 1), interpolate_adj = T, plot_diff = T) -->\n<!-- for (idx in 1:n_rep) { -->\n<!--   gg_data = data.frame( -->\n<!--     PIT = seq(0,1,length.out = N), -->\n<!--     ECDF = ecdf(pit(x_post[rep_id == idx], layer_data(p_dens), idx))(seq(0,1,length.out = N)) -->\n<!--     ) -->\n<!--   p_ecdfd <- p_ecdfd + geom_step(data = gg_data, aes(x = PIT, y = ECDF - PIT), colour = layer_data(p_dens)$colour[1], alpha = .7, linewidth = layer_data(p_dens)$linewidth[1]) -->\n<!-- } -->\n\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- p_dens -->\n<!-- p_ecdf -->\n<!-- p_ecdfd -->\n<!-- p_dots -->\n<!-- p_hist -->\n<!-- ``` -->\n\n\n\n<iframe height=\"2200\" width=\"100%\" frameborder=\"no\" src=\"https://teemusailynoja.shinyapps.io/ppc_continuous/\">\n</iframe>\n",
    "supporting": [
      "kde_with_discontinuities_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}