{
  "hash": "7e6b389fe452b1183fd33e057f81cb4f",
  "result": {
    "markdown": "---\ntitle: \"Pitfalls of density plots\"\nauthor: \"Teemu SÃ¤ilynoja\"\ndate: \"2023-05-15\"\ndate-modified: \"2023-05-16\"\nformat:\n  html:\n    page-layout: full\n    toc: true\n    code-fold: true\n    code-tools: true\n    code-line-numbers: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggdist)\nlibrary(bayesplot)\nlibrary(khroma)\nlibrary(latex2exp)\nlibrary(sfsmisc)\nsource(\"../../../code/helpers.R\")\nsource(\"../../../code/kde_tests.R\")\n\nset.seed(37645624)\n\ngood_theme <- bayesplot::theme_default(base_family = \"Sans\", base_size = 14) + theme(\n  axis.text = element_text(colour = \"#666666\", size = 12),\n  axis.ticks = element_line(colour = \"#666666\"),\n  title = element_text(colour = \"#666666\", size = 16),\n  plot.subtitle = element_text(colour = \"#666666\", size = 14),\n  legend.text = element_text(colour = \"#666666\", size = 12),\n  legend.title = element_text(colour = \"#666666\", size = 14),\n  axis.line = element_line(colour = \"#666666\"))\n\ntheme_set(good_theme)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\necdf_difference_limits <- ecdf_confidence_intervals(\n  gamma = adjust_gamma_optimize(1000,1000, .95),\n  N = 1000, K = 1000)\n\nx0 <- 0:1000 / 1000\n\np0 <- ggplot(mapping = aes(x = x0)) +\n  geom_step(aes(y = (ecdf_difference_limits$lower - 0:1000) / 1000)) +\n  geom_step(aes(y = (ecdf_difference_limits$upper - 0:1000) / 1000)) +\n  labs(title = \"ECDF Difference\",\n       subtitle = \"95% outer simultaneous confidense intervals\",\n       x = \"PIT\",\n       y = \"ECDF - Difference\",\n       colour = \"Method\")\n```\n:::\n\n## Intro\n\nBelow, we examine two common pitfalls of density plots made using kernel density estimates (KDEs).\nOverall, KDEs have satisfactory performance in summarising observations of continuous random variables,\nbut, as highlighted below, when the variable is bounded, or contains point masses, the density estimate\ncan misrepresent the data without any issues being immediately apparent from the density plot.\n\nIncluded is also a comparison between the density estimates provided by `ggplot` and `ggdist`. By default, `ggdist` attempts to automatically detect he bounds of the observed data.\n\n## Simple continuous example\n\nSample $x_1,\\dots,x_N$, from Laplace distribution with mean, $\\mu = 0$, and scale, $b=1$, that is,\nthe density function of $x$ is $f(x) = \\frac{1}{2}\\exp\\left(-|x|\\right)$.\n\n::: {.cell}\n\n```{.r .cell-code}\nx1 <- sample(c(-1,1), 1000, replace = T) * rexp(1000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(mapping = aes(x = x1)) +\n  stat_density(aes(colour = \"ggplot\"), bw = \"SJ\", geom = \"line\") +\n  stat_slab(aes(colour = \"ggdist\"),  fill = NA, normalize = \"none\", scale = 1) +\n  labs(\"Laplace distribution\",subtitle = \"N = 1000\\nx ~ 1/2 exp(-|x|)\",\n       x = TeX(\"$x$\"), y = \"KDE\", colour = \"Method\") +\n  scale_y_continuous(expand = c(0,NA)) +\n  coord_cartesian(ylim = c(0,1.1 * max(density(x1)$y)))\n\np1\n```\n\n::: {.cell-output-display}\n![](KDE_demo_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe ECDF difference plot doesn't suggest any issues with the KDE\n\n::: {.cell}\n\n```{.r .cell-code}\np0 + geom_step(aes(y = ecdf(pit_from_densityplot(p1, 1, x1))(x0) - x0,\n                   colour = \"ggplot\")) +\n  geom_step(aes(y = ecdf(pit_from_densityplot(p1, 2, x1, T))(x0) - x0,\n                   colour = \"ggdist\")) +\n  scale_colour_vibrant(limits = c(\"ggdist\", \"ggplot\", \"1\", \"2\"), \n                       breaks = c(\"ggdist\", \"ggplot\"))\n```\n\n::: {.cell-output-display}\n![](KDE_demo_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Bounded continuous data\n\nSample as above, but the distribution is truncated to the interval $[-1.5,0.5]$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx2 <- x1\nwhile (!all(x2 > -1.5, x2 < .5)) {\n  mask <- (x2 < -1.5 | x2 > .5)\n  x2[mask] = sample(c(-1,1), sum(mask), replace = T) * rexp(sum(mask))\n}\n```\n:::\n\n\nWe see a difference in the tails of the densityplots, when the boundedness is taken into account in the KDE computations.\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(mapping = aes(x = x2)) + \n  stat_density(aes(colour = \"Bounded\"), bw = \"SJ\", geom = \"line\", bounds = c(-1.5, .5)) +\n  stat_density(aes(colour = \"Naive\"), bw = \"SJ\", geom = \"line\") +\n  stat_slab(aes(colour = \"ggdist\"), fill = NA, normalize = \"none\", scale = 1) +\n  labs(title = \"Bounded observation\", subtitle = \"KDE computed with and without the bounds\",\n       x = TeX(\"$x$\"), y = \"KDE\", colour = \"Method\") +\n  scale_colour_vibrant(limits = c(\"ggdist\", \"Naive\", \"Bounded\", \"2\"), \n                       breaks = c(\"ggdist\", \"Naive\", \"Bounded\")) +\n  scale_y_continuous(expand = c(0,NA))\n\np2\n```\n\n::: {.cell-output-display}\n![](KDE_demo_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThe ECDF difference plot also suggests calibration issues with the unbounded KDE. Both the bounded `ggplot` density and the automatic bound detection by `ggdist` look well calibrated.\n\n::: {.cell}\n\n```{.r .cell-code}\np0 + geom_step(aes(y = ecdf(pit_from_densityplot(p2, 2, x2))(x0) - x0,\n                   colour = \"Naive\")) +\n  geom_step(aes(y = ecdf(pit_from_densityplot(p2, 1, x2))(x0) - x0, colour = \"Bounded\")) +\n  geom_step(aes(y = ecdf(pit_from_densityplot(p2, 3, x2, T))(x0) - x0,\n                   colour = \"ggdist\")) +\n  labs(colour = \"Method\") +\n  scale_colour_vibrant(limits = c(\"ggdist\", \"Naive\", \"Bounded\", \"2\"), \n                       breaks = c(\"ggdist\", \"Naive\", \"Bounded\"))\n```\n\n::: {.cell-output-display}\n![](KDE_demo_files/figure-html/ecdf 2-1.png){width=672}\n:::\n:::\n\n\n\n## Continuous data with point masses\n\nSimulate an example, where measurements under a certain threshold are reported as zeros.\nHere $x\\sim\\exp(x)$ with all values sampled below $0.1$ reported as zero. \n\n::: {.cell}\n\n```{.r .cell-code}\nx3 <- rexp(1000, 1)\nx3[x3 < .1] <- 0\n```\n:::\n\n\nIf the measurement threshold is known, the data can be visualized as a mixture of\na discrete point mass and a continuous distribution. The \"naive\" KDE seems to \nunder estimate the density near $0.1$, and can't show the spike at zero. \n\nBelow, the density of the continuous mixture component is scaled by $P(x \\neq 0)$\nto make the area of the bar and the KDE together add to one.\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- ggplot() + \n  geom_rect(\n    aes(xmin = 0, xmax = .1, ymin = 0, ymax = 10 * sum(x3 == 0) / length(x3), \n        colour = \"Mixture\", fill = \"Mixture\"),\n    alpha = .3) +\n  stat_density(\n    aes(x = x3[x3 > 0], y = (1 - sum(x3 == 0) / length(x3)) * after_stat(density), \n        colour = \"Mixture\", fill = \"Naive\"), bw = \"SJ\", alpha = 0, bounds = c(.1, Inf), outline.type = \"upper\") +\n  stat_density(aes(x = x3, colour = \"Naive\", fill = \"Naive\"), bw = \"SJ\", alpha = 0, linewidth = 1, outline.type = \"upper\") +\n  stat_slab(aes(x = x3, colour = \"ggdist - full\", fill = \"ggdist - full\"),\n             slab_fill = NA, normalize = \"none\", scale = 1) +\n  labs(title = \"Observation with point mass\",\n       subtitle = \"KDE for full observation and only continuous part\",\n       x = TeX(\"x\"), y = \"\", colour = \"Method\", fill = \"Method\") +\n  scale_colour_vibrant(limits = c(\"ggdist - full\", \"Naive\", \"Mixture\", \"2\"), \n                       breaks = c(\"ggdist - full\", \"Naive\", \"Mixture\")) +\n  scale_fill_vibrant(limits = c(\"ggdist - full\", \"Naive\", \"Mixture\", \"2\"),\n                     breaks = c(\"ggdist - full\", \"Naive\", \"Mixture\")) +\n  scale_y_continuous(expand = c(0,NA))\n\np3\n```\n\n::: {.cell-output-display}\n![](KDE_demo_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThe calibration of the KDE for the continuous part should be inspected separately,\nas the scaled density above would show miscalibration due to missing part of the\nobservation distribution.  \n\n::: {.cell}\n\n```{.r .cell-code}\np4 <- ggplot() + \n  stat_density(\n    aes(x = x3[x3 > 0], \n        colour = \"Mixture\"), bw = \"SJ\", bounds = c(.1, Inf),\n    geom = \"line\") +\n  stat_slab(aes(x = x3[x3 > 0], colour = \"ggdist - cont.\"),\n            slab_fill = NA, normalize = \"none\", scale = 1, fill = NA) +\n  labs(colour = \"Method\") +\n  scale_colour_vibrant(limits = c(\"ggdist\", \"Naive\", \"Mixture - cont.\", \"ggdist - cont.\"), \n                       breaks = c(\"Mixture\", \"ggdist - cont.\"))\n\np4\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 512 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](KDE_demo_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nAgain, the ECDF difference plot suggest issues with the naive approach and thus \ncould be used to warn user if the naive density plot is drawn.\n\nHere the automatic bound detection by `ggdist` produces a KDE that is well \ncalibrated after the over saturation of PIT values of zero and the sudden drop \nwhere no observations are covered by the density estimate.\nWhen restricted to the continuous part of the mixture, both the `ggplot` and \n`ggdist` methods give calibrated estimates.\n\n::: {.cell}\n\n```{.r .cell-code}\np0 + geom_step(aes(y = ecdf(pit_from_densityplot(p3, 3, x3))(x0) - x0, colour = \"Naive\")) +\n  geom_step(aes(y = ecdf(pit_from_densityplot(p4, 1, x3[x3 > 0]))(x0) - x0, \n                colour = \"Mixture\")) +\n  geom_step(aes(y = ecdf(pit_from_densityplot(p3, 4, x3, T))(x0) - x0,\n                   colour = \"ggdist - full\")) +\n  geom_step(aes(y = ecdf(pit_from_densityplot(p4, 2, x3[x3 > 0], T))(x0) - x0,\n                   colour = \"ggdist - cont.\")) +\n  labs(colour = \"Method\") +\n  scale_colour_vibrant(limits = c(\"ggdist - full\", \"Naive\", \"Mixture - cont.\", \"ggdist - cont.\"), \n                       breaks = c(\"ggdist - full\", \"Naive\", \"Mixture - cont.\", \"ggdist - cont.\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1001 rows containing missing values (`geom_step()`).\n```\n:::\n\n::: {.cell-output-display}\n![](KDE_demo_files/figure-html/ecdf 3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "KDE_demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}